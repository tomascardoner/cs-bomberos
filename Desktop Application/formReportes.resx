<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonImprimir.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rq42PDwRweffato0bMOgB+EAAAAASUVORK5CYII=
</value>
  </data>
</root>