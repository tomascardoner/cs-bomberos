- Establecer Grupos Familiares formados por
     - Padre, Madre (Contemplar que puede haber mas de un padre o madre en el grupo)
     - Alumnos

- Poder especificar autorizados a retirar a cada chico con la relación que se especifique

- Las Personas pueden pertenecer a uno o más de los siguientes roles y subroles:
     - Alumno
     - Maestro/Profesor
     - Personal Auxiliar
     - Alumno
     - Persona externa:
          - Padres
          - Sólo Autorizados

- Cada Grupo familiar o Persona tiene que poder tener varios teléfonos, varias direcciones

- Se debería poder especificar si el alumno está o nó en la Institución, y de esa manera, cambiar el Estado del mismo y de los Padres (para no enviar comunicaciones de gusto)

- Aviso automático del atraso de las cuotas

- Los descuentos a los hermanos se aplicarán de la siguiente manera:
     - El alumno que está en el nivel/año más alto, paga la cuota completa
     - Todos los siguientes pagan el 20% menos
     - Se podrá especificar el porcentaje automático o manual para cada alumno

- A principio de mes (día 5 aprox), se emitirá la totalidad de las facturas de cuotas

- Para registrar los pagos, se podrá asignar a cada padre, los hijos que pagaría. Ejemplo: Puede ser que el padre de un alumno, pague la cuota de ese alumno, pero la madre puede tener otro hijo aparte, entonces esa madre debería poder pagar sólo su segundo hijo. Todo eso se va a lograr usando el ID del padre o el de la madre para pagar, según corresponda.

- Cada persona va a tener varios email asociados
- Sincronizar direcciones de mail con Outlook (dependiendo del nivel) y formando grupos (Ejemplo: Jardín Sala de 2, Sala de 3), Jornada extendida

- Cada alumno va a tener asignado el nivel - sala actual. Cada año, se van a transferir al nivel siguiente (obviamnete sólo los activos). Vamos a guadar un historial de niveles de los alumnos.

- Requerir contraseña segura:

La contraseña debe cumplir los siguientes requisitos de complejidad:

No contener el nombre de cuenta del usuario o partes del nombre completo del usuario en más de dos caracteres consecutivos
Tener una longitud mínima de seis caracteres
Incluir caracteres de tres de las siguientes categorías:
Mayúsculas (de la A a la Z)
Minúsculas (de la a a la z)
Dígitos de base 10 (del 0 al 9)
Caracteres no alfanuméricos (por ejemplo, !, $, #, %)














        Dim WhereString As String = ""
        Dim WhereStringTipo As String = ""


            ''//////////////////////////////////////
            ''TIPOS DE ENTIDAD
            'If menuitemEntidadTipo_PersonalColegio.Checked And menuitemEntidadTipo_Docente.Checked And menuitemEntidadTipo_Alumno.Checked And menuitemEntidadTipo_Familiar.Checked And menuitemEntidadTipo_Proveedor.Checked Then
            '    'TODOS LOS TIPOS DE ENTIDAD SELECCIONADOS, NO FILTRO NADA
            'Else
            '    If menuitemEntidadTipo_PersonalColegio.Checked Then
            '        WhereStringTipo = WhereStringTipo & IIf(WhereStringTipo = "", "", " OR ").ToString & "ent.TipoPersonalColegio"
            '    End If
            '    If menuitemEntidadTipo_Docente.Checked Then
            '        WhereStringTipo = WhereStringTipo & IIf(WhereStringTipo = "", "", " OR ").ToString & "ent.TipoDocente"
            '    End If
            '    If menuitemEntidadTipo_Alumno.Checked Then
            '        WhereStringTipo = WhereStringTipo & IIf(WhereStringTipo = "", "", " OR ").ToString & "ent.TipoAlumno"
            '    End If
            '    If menuitemEntidadTipo_Familiar.Checked Then
            '        WhereStringTipo = WhereStringTipo & IIf(WhereStringTipo = "", "", " OR ").ToString & "ent.TipoFamiliar"
            '    End If
            '    If menuitemEntidadTipo_Proveedor.Checked Then
            '        WhereStringTipo = WhereStringTipo & IIf(WhereStringTipo = "", "", " OR ").ToString & "ent.TipoProveedor"
            '    End If

            '    WhereString = WhereString & IIf(WhereString = "", "(", " AND (").ToString & WhereStringTipo & ")"
            'End If

            ''//////////////////////////////////////
            ''BUSQUEDA
            'If BusquedaAplicada Then
            '    WhereString = WhereString & IIf(WhereString = "", "", " AND ").ToString & "(ent.Apellido.ToLower.Contains(textboxBuscar.Text.ToLower.Trim) Or ent.Nombre.ToLower.Contains(textboxBuscar.Text.ToLower.Trim))"
            'End If

            ''//////////////////////////////////////
            ''ACTIVO
            'Select Case comboboxActivo.SelectedIndex
            '    Case 1
            '        WhereString = WhereString & IIf(WhereString = "", "", " AND ").ToString & "ent.Activo"
            '    Case 2
            '        WhereString = WhereString & IIf(WhereString = "", "", " AND ").ToString & "NOT ent.Activo"
            'End Select

            ''//////////////////////////////////////
            ''APLICAR EL FILTRO
            'listEntidadGrid = listEntidadBase.Where(Function(ent) WhereString)
